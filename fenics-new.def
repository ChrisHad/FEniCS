BootStrap: debootstrap
OSVersion: xenial
MirrorURL: http://mirror.bytemark.co.uk/ubuntu/
Include: bash

%runscript

exec /usr/bin/python

%post

export PETSC_VERSION=3.7.5
export SLEPC_VERSION=3.7.3
export FENICS_HOME=/usr/local/fenics
export FENICS_PYTHON_MAJOR_VERSION=3
export FENICS_PYTHON_MINOR_VERSION=5
export SLEPC_DIR=${FENICS_HOME}/slepc-64
export PETSC_DIR=${FENICS_HOME}/petsc-64
export SWIG_VERSION=3.0.10 
export MPI4PY_VERSION=2.0.0 
export PETSC4PY_VERSION=3.7.0 
export SLEPC4PY_VERSION=3.7.0 
export TRILINOS_VERSION=12.10.1 
export OPENBLAS_NUM_THREADS=1 
export OPENBLAS_VERBOSE=0
export LC_ALL=C
export FENICS_PREFIX=$FENICS_HOME

echo "
# Environment variables
export PETSC_VERSION=$PETSC_VERSION 
export SLEPC_VERSION=$SLEPC_VERSION
export FENICS_PYTHON_MAJOR_VERSION=$FENICS_PYTHON_MAJOR_VERSION
export FENICS_PYTHON_MINOR_VERSION=$FENICS_PYTHON_MINOR_VERSION
export PETSC_DIR=$PETSC_DIR
export SLEPC_DIR=$SLEPC_DIR
export SWIG_VERSION=$SWIG_VERSION
export MPI4PY_VERSION=$MPI4PY_VERSION
export PETSC4PY_VERSION=$PETSC4PY_VERSION
export SLEPC4PY_VERSION=$SLEPC4PY_VERSION
export TRILINOS_VERSION=$TRILINOS_VERSION
export OPENBLAS_NUM_THREADS=$OPENBLAS_NUM_THREADS
export OPENBLAS_VERBOSE=$OPENBLAS_VERBOSE
export LC_ALL=$LC_ALL
# Set the main path here
export FENICS_HOME=$FENICS_HOME
export FENICS_PREFIX=$FENICS_PREFIX
export PATH=${FENICS_HOME}/bin:${HOME}/bin:\${PATH}
export LD_LIBRARY_PATH=${FENICS_HOME}/lib:\${LD_LIBRARY_PATH}
export PKG_CONFIG_PATH=${FENICS_HOME}/lib/pkgconfig:\${PKG_CONFIG_PATH}
export PYTHONPATH=${FENICS_HOME}/lib/python${FENICS_PYTHON_MAJOR_VERSION}.${FENICS_PYTHON_MINOR_VERSION}/site-packages:\${PYTHONPATH}
export MANPATH=${FENICS_HOME}/share/man:\$MANPATH
export SRC_DIR=${FENICS_HOME}/src
export PYTHON=/usr/bin/python${FENICS_PYTHON_MAJOR_VERSION}
export PYTHON_BIN=python${FENICS_PYTHON_MAJOR_VERSION}

if [ ! -d "$FENICS_HOME" ]
then
    mkdir -p $FENICS_HOME
fi

if [ ! -d "${FENICS_HOME}/src" ]
then
    mkdir -p $FENICS_HOME/src
fi

if [ ! -d "${FENICS_HOME}/lib/python${FENICS_PYTHON_MAJOR_VERSION}.${FENICS_PYTHON_MINOR_VERSION}/site-packages" ]
then
    mkdir -p ${FENICS_HOME}/lib/python${FENICS_PYTHON_MAJOR_VERSION}.${FENICS_PYTHON_MINOR_VERSION}/site-packages
fi

" >> /environment 

. /environment
apt-get -qq update
apt-get -y install python3-software-properties \
        software-properties-common \
        wget 

add-apt-repository universe 
apt-get -qq update

apt-get -y install bison \
	cmake \
	flex \
	git \
	libboost-all-dev \
	libboost-dev \
	libdapl2 \
	libeigen3-dev \
	libgmp-dev \
	liblapack-dev \
	libmlx4-1 \
	libmlx5-1 \
	libmpfr-dev \
	libopenmpi-dev \
	libopenblas-base \
	libopenblas-dev \
	libpcre3-dev \
	libpcre3 \
        openmpi-bin \
        ${PYTHON_BIN}-dev \
        ${PYTHON_BIN}-flufl.lock \
        ${PYTHON_BIN}-matplotlib \
        ${PYTHON_BIN}-numpy \
        ${PYTHON_BIN}-ply \
        ${PYTHON_BIN}-pytest \
        ${PYTHON_BIN}-scipy \
        ${PYTHON_BIN}-six \
        ${PYTHON_BIN}-urllib3 \
	${PYTHON_BIN}-pip \
	vim


pip${FENICS_PYTHON_MAJOR_VERSION} install --upgrade pip
pip${FENICS_PYTHON_MAJOR_VERSION} install setuptools && \
rm -rf /tmp/*

if [ ! -d "$PETSC_DIR" ]
then
    mkdir -p $PETSC_DIR
fi

wget --quiet -nc http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz && \
tar -xf petsc-lite-${PETSC_VERSION}.tar.gz && \
cd petsc-${PETSC_VERSION} && \
PETSC_DIR=$PWD ./configure --COPTFLAGS="-O2" \
            --CXXOPTFLAGS="-O2" \
            --FOPTFLAGS="-O2" \
            --with-64-bit-indices \
            --with-blas-lib=/usr/lib/libopenblas.a --with-lapack-lib=/usr/lib/liblapack.a \
            --with-c-support \
            --with-debugging=0 \
            --with-shared-libraries \
	    --enable-parallel=1 \
            --download-suitesparse \
            --download-metis \
            --download-parmetis \
            --download-ptscotch \
            --download-hypre \
            --download-superlu_dist \
	    --download-hdf5 \
            --prefix=${FENICS_HOME}/petsc-64 && \
make && \
make install && \
cd .. && rm -rf petsc*

if [ ! -d "$SLEPC_DIR" ]
then
    mkdir -p $SLEPC_DIR
fi

#Install SLEPc from source
wget -nc --quiet https://bitbucket.org/slepc/slepc/get/v${SLEPC_VERSION}.tar.gz -O slepc-${SLEPC_VERSION}.tar.gz && \
mkdir -p slepc-src && tar -xf slepc-${SLEPC_VERSION}.tar.gz -C slepc-src --strip-components 1 && \
export PETSC_DIR=${FENICS_HOME}/petsc-64 && \
cd slepc-src && \
SLEPC_DIR=$PWD ./configure --prefix=${FENICS_HOME}/slepc-64 && \
make && \
make install  
cd .. && rm -rf slepc*

# Install Jupyter, sympy, mpi4py, petsc4py and slepc4py
#  and swig from source
export PETSC_DIR=${FENICS_HOME}/petsc-64
export SLEPC_DIR=$SLEPC_DIR
pip${FENICS_PYTHON_MAJOR_VERSION} install jupyter && \
pip${FENICS_PYTHON_MAJOR_VERSION} install sympy && \
pip${FENICS_PYTHON_MAJOR_VERSION} install https://bitbucket.org/mpi4py/mpi4py/downloads/mpi4py-${MPI4PY_VERSION}.tar.gz && \
pip${FENICS_PYTHON_MAJOR_VERSION} install https://bitbucket.org/petsc/petsc4py/downloads/petsc4py-${PETSC4PY_VERSION}.tar.gz && \
pip${FENICS_PYTHON_MAJOR_VERSION} install https://bitbucket.org/slepc/slepc4py/downloads/slepc4py-${SLEPC4PY_VERSION}.tar.gz && \
wget -nc --quiet http://downloads.sourceforge.net/swig/swig-${SWIG_VERSION}.tar.gz && \
tar xf swig-${SWIG_VERSION}.tar.gz && \
cd swig-${SWIG_VERSION} && \
./configure && \
make && \
make install
cd .. && rm -rf swig*

mkdir -p $FENICS_HOME/bin
#   This should be changed at some point
git clone https://github.com/ChrisHad/FEniCS.git 
cp FEniCS/fenics* $FENICS_HOME/bin
chmod +x $FENICS_HOME/bin/fenics-ctl
echo $FENICS_HOME
. $FENICS_HOME/bin/fenics.env.conf
./$FENICS_HOME/bin/fenics-ctl update

%test

. /environment
${PYTHON} $FENICS_HOME/share/dolfin/demo/documented/poisson/python/demo_poisson.py
